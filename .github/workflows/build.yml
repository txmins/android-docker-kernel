name: build
on:
  watch:
    types: [started]

  workflow_call:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
    - name: 获取空间支持
      uses: easimon/maximize-build-space@master
      with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

    - name: 构建编译环境
      run: |
        sudo apt-get update
        sudo apt install build-essential git curl wget bison flex zip bc cpio libssl-dev ccache
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: 下载proton-clang
      run: |
        cd /home/runner
        mkdir proton-clang
        cd proton-clang
        wget https://github.com/kdrag0n/proton-clang/archive/refs/tags/20210522.zip
        unzip 20210522.zip
        
    - name: 下载内核源码
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/txmins/kernel_xiaomi_sm8250_mod -b android14-lineage21-mod android-kernel --depth=1

    - name: 开启lxc和docker配置
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        wget https://github.com/wu17481748/lxc-docker/releases/download/lxc-docker-2config/LXC-DOCKER-OPEN-CONFIG.sh
        chmod 777 LXC-DOCKER-OPEN-CONFIG.sh
        ./LXC-DOCKER-OPEN-CONFIG.sh android-kernel/arch/arm64/configs/alioth_defconfig -w

    - name: 打入lxc补丁
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       wget https://raw.githubusercontent.com/tomxi1997/lxc-docker-support-for-android/refs/heads/main/runcpatch.sh
       chmod a+x runcpatch.sh
       if [ -f android-kernel/kernel/cgroup.c ]; then
       ./runcpatch.sh android-kernel/kernel/cgroup.c               
       fi
       
       if [ -f android-kernel/kernel/cgroup/cgroup.c ]; then
       ./runcpatch.sh android-kernel/kernel/cgroup/cgroup.c               
       fi
       
       if [ -f android-kernel/net/netfilter/xt_qtaguid.c ]; then
         wget https://github.com/wu17481748/lxc-docker/releases/download/lxc/lxc.patch
         patch -p0 < lxc.patch
       fi

    - name: 关闭ANDROID_PARANOID_NETWORK配置
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        sed -i '/CONFIG_ANDROID_PARANOID_NETWORK/d' android-kernel/arch/arm64/configs/alioth_defconfig
        echo "# CONFIG_ANDROID_PARANOID_NETWORK is not set" >> android-kernel/arch/arm64/configs/alioth_defconfig

    - name: 开始编译内核
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        cat arch/arm64/configs/alioth_defconfig
        bash build.sh alioth ksu

    - name: 上传Upload AnyKernel3
      uses: actions/upload-artifact@v3
      with:
        name: Lineageos_Kernel_Ksu_Docker_anykernel3
        path: kernel_workspace/android-kernel/anykernel/*
